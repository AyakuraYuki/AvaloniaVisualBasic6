<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
    <TargetFrameworks>$(DotNetVersionDesktop)</TargetFrameworks>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <ApplicationIcon>vb6icon.ico</ApplicationIcon>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>$(NoWarn);CS1998</NoWarn>
    <WarningsNotAsErrors>IL2026;IL3053;IL2104;</WarningsNotAsErrors>
  </PropertyGroup>

  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)" />
    <PackageReference Include="System.Private.Uri" Version="4.3.2" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="$(AvaloniaVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\AvaloniaVisualBasic\AvaloniaVisualBasic.csproj" />
  </ItemGroup>

  <ItemGroup>
    <AvaloniaResource Include="..\AvaloniaVisualBasic\vb6icon.ico">
      <Link>vb6icon.ico</Link>
    </AvaloniaResource>
  </ItemGroup>
</Project>
